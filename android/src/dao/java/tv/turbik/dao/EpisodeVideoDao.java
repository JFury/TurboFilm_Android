package tv.turbik.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import tv.turbik.dao.EpisodeVideo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table EPISODE_VIDEO.
*/
public class EpisodeVideoDao extends AbstractDao<EpisodeVideo, Void> {

    public static final String TABLENAME = "EPISODE_VIDEO";

    /**
     * Properties of entity EpisodeVideo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Alias = new Property(0, String.class, "alias", false, "ALIAS");
        public final static Property Season = new Property(1, int.class, "season", false, "SEASON");
        public final static Property Episode = new Property(2, int.class, "episode", false, "EPISODE");
        public final static Property Lang = new Property(3, String.class, "lang", false, "LANG");
        public final static Property Quality = new Property(4, String.class, "quality", false, "QUALITY");
        public final static Property PartStart = new Property(5, int.class, "partStart", false, "PART_START");
        public final static Property PartLength = new Property(6, int.class, "partLength", false, "PART_LENGTH");
        public final static Property TotalLength = new Property(7, int.class, "totalLength", false, "TOTAL_LENGTH");
    };


    public EpisodeVideoDao(DaoConfig config) {
        super(config);
    }
    
    public EpisodeVideoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'EPISODE_VIDEO' (" + //
                "'ALIAS' TEXT NOT NULL ," + // 0: alias
                "'SEASON' INTEGER NOT NULL ," + // 1: season
                "'EPISODE' INTEGER NOT NULL ," + // 2: episode
                "'LANG' TEXT NOT NULL ," + // 3: lang
                "'QUALITY' TEXT NOT NULL ," + // 4: quality
                "'PART_START' INTEGER NOT NULL ," + // 5: partStart
                "'PART_LENGTH' INTEGER NOT NULL ," + // 6: partLength
                "'TOTAL_LENGTH' INTEGER NOT NULL );"); // 7: totalLength
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'EPISODE_VIDEO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, EpisodeVideo entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getAlias());
        stmt.bindLong(2, entity.getSeason());
        stmt.bindLong(3, entity.getEpisode());
        stmt.bindString(4, entity.getLang());
        stmt.bindString(5, entity.getQuality());
        stmt.bindLong(6, entity.getPartStart());
        stmt.bindLong(7, entity.getPartLength());
        stmt.bindLong(8, entity.getTotalLength());
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public EpisodeVideo readEntity(Cursor cursor, int offset) {
        EpisodeVideo entity = new EpisodeVideo( //
            cursor.getString(offset + 0), // alias
            cursor.getInt(offset + 1), // season
            cursor.getInt(offset + 2), // episode
            cursor.getString(offset + 3), // lang
            cursor.getString(offset + 4), // quality
            cursor.getInt(offset + 5), // partStart
            cursor.getInt(offset + 6), // partLength
            cursor.getInt(offset + 7) // totalLength
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, EpisodeVideo entity, int offset) {
        entity.setAlias(cursor.getString(offset + 0));
        entity.setSeason(cursor.getInt(offset + 1));
        entity.setEpisode(cursor.getInt(offset + 2));
        entity.setLang(cursor.getString(offset + 3));
        entity.setQuality(cursor.getString(offset + 4));
        entity.setPartStart(cursor.getInt(offset + 5));
        entity.setPartLength(cursor.getInt(offset + 6));
        entity.setTotalLength(cursor.getInt(offset + 7));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(EpisodeVideo entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(EpisodeVideo entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
